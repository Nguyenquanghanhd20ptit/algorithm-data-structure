LIỆT KÊ ĐỈNH TRỤ

Bài làm tốt nhất
Cho đồ thị vô hướng liên thông G= được biểu diễn dưới dạng danh sách cạnh. Sử dụng thuật toán DFS hoặc BFS, hãy đưa ra tất cả các đỉnh trụ của đồ thị?

Input:

Dòng đầu tiên đưa vào T là số lượng bộ test.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 2 dòng: dòng đầu tiên đưa vào hai số |V|, |E| tương ứng với số đỉnh và số cạnh; Dòng tiếp theo đưa vào các bộ đôi uÎV,
vÎV tương ứng với một cạnh của đồ thị.
T, |V|, |E| thỏa mãn ràng buộc: 1≤T≤100; 1≤|V|≤103; 1≤|E|≤|V|(|V|-1)/2;
Output:

Đưa ra danh sách các đỉnh trụ của mỗi test  theo từng dòng.
      Ví dụ:

Input:

Output:

1

5 5

1 2 1 3 2 3 2 5 3 4

2 3


bai lam:
#include<bits/stdc++.h>
using namespace std;
int n,m;
bool a[1001];
vector<int> v[1001];
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	memset(a,false,sizeof(a));
}
void dfs(int i){
	a[i]=true;
	for(auto x:v[i]){
		if(a[x]==false){
			dfs(x);
		}
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		vector<int> ap;
		for(int i=1;i<=n;i++){
			memset(a,false,sizeof(a));
			// loai bo dinh i va cac canh lien thuoc voi no
			a[i]=true;
			if(i==1) dfs(2);
			else dfs(1);
			bool x=false;
			for(int j=1;j<=n;j++){
				if(a[j]==false){
					x=true;   // do thi khong con lien thong
					break;
				}
			}
			if(x) ap.push_back(i);
		}
		for(auto it:ap){
			cout<<it<<" ";
		}
		for(int i=1;i<=n;i++){
			v[i].clear();
		}
		cout<<endl;
	}
}
