LIỆT KÊ CẠNH CẦU

Bài làm tốt nhất
Cho đồ thị vô hướng liên thông G= được biểu diễn dưới dạng danh sách cạnh. Sử dụng thuật toán DFS hoặc BFS, hãy đưa ra tất cả các cạnh cầu của đồ thị?

Input:

Dòng đầu tiên đưa vào T là số lượng bộ test.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 2 dòng: dòng đầu tiên đưa vào hai số |V|, |E| tương ứng với số đỉnh và số cạnh; Dòng tiếp theo đưa vào các bộ đôi uÎV,
vÎV tương ứng với một cạnh của đồ thị.
T, |V|, |E| thỏa mãn ràng buộc: 1≤T≤100; 1≤|V|≤103; 1≤|E|≤|V|(|V|-1)/2;
Output:

Đưa ra danh sách các cạch cầu của mỗi test theo từng dòng. In ra đáp án theo thứ tự từ điển, theo dạng “a b …” với a < b.
      Ví dụ:

Input:

Output:

1

5 5

1 2 1 3 2 3 2 5 3 4

 

2 5 3 4

bai lam:
#include<bits/stdc++.h>
using namespace std;
int n,m;
bool a[1001];
vector<int> v[1001];
vector<pair<int,int>> c;
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
		c.push_back({x,y});
	}
}
void dfs(int i,int s,int e){
	a[i]=true;
	for(auto x:v[i]){
		if(x==s && i==e || x==e && i==s){
			continue;
		}
		if(a[x]==false) dfs(x,s,e);
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		vector<pair<int,int>> v1;
		for(auto it:c){
			//loai bo canh hien tai
			memset(a,false,sizeof(a));
			dfs(1,it.first,it.second);
			bool ok=false;
			for(int i=1;i<=n;i++){
				if(a[i]==false){
					ok=true; break;  //do thi khong con lien thong
				}
			}
			if(ok) v1.push_back({it.first,it.second});
		}
		sort(v1.begin(),v1.end());
		for(auto it:v1){
			cout<<it.first<<" "<<it.second<<" ";
		}
		for(int i=1;i<=n;i++){
			v[i].clear();
		}
		c.clear();
		cout<<endl;
	}
}
