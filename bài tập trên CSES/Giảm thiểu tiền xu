Hãy xem xét một hệ thống tiền bao gồm nđồng xu. Mỗi đồng xu có một giá trị nguyên dương. Nhiệm vụ của bạn là tạo ra một khoản tiềnxbằng cách sử dụng các đồng tiền có sẵn theo cách sao cho số lượng đồng xu là tối thiểu.

Ví dụ, nếu tiền xu{ 1 , 5 , 7 } và số tiền mong muốn là 11, một giải pháp tối ưu là 5 + 5 + 1 yêu cầu 3 đồng xu.

Đầu vào Dòng nhập

đầu tiên có hai số nguyênn và x: số xu và số tiền mong muốn.

Dòng thứ hai cón số nguyên riêng biệt C1,C2, … ,Cn: giá trị của mỗi đồng xu.

Đầu ra

In ra một số nguyên: số xu tối thiểu. Nếu không thể tạo ra tổng mong muốn, hãy in- 1.

Hạn chế
1 ≤ n ≤ 100
1 ≤ x ≤106
1 ≤c[i]≤106
Ví dụ

Đầu vào: Đầu ra:
3 11
1 5 7


3

bai lam
#include<bits/stdc++.h>
using namespace std;
long long mod=1e9+7;
bool cmp(int a,int b){
	return a>b;
}
int main(){
	int n,k; cin>>n>>k;
	long long a[n+1],d[1000001];
	for(int i=1;i<=n;i++){
		cin>>a[i];
	}
	for(int i=1;i<=k;i++){
		d[i]=INT_MAX;
		for(int j=1;j<=n;j++){
			if(a[j]==i) d[i]=1;
			else if(i>a[j]) d[i]=min(d[i],d[i-a[j]]+1);
			else continue;
		}
	}
	if(d[k]==INT_MAX) cout<<-1<<endl;
	else cout<<d[k]<<endl;
}
