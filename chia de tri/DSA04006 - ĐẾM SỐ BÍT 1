ĐẾM SỐ BÍT 1

Bài làm tốt nhất
Cho số nguyên dương N. Mỗi bước, bạn sẽ biến đổi N thành [N/2], N mod 2, [N/2]. Sau khi thực hiện một cách triệt để, ta thu được một dãy số chỉ toàn số 0 và 1.

Nhiệm vụ của bạn là hãy đếm các số bằng 1 trong đoạn [L, R] của dãy số cuối cùng.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test gồm 3 số nguyên N, L, R (1 ≤ N, L, R < 250, 0 ≤ R-L ≤ 100 000).

Output: 

Với mỗi test, in ra đáp án trên một dòng.

Ví dụ:

Input

Output

2

7 2 5

10 3 10

4

5

 

Giải thích test 1: [7] à [3, 1, 3] à [1, 1, 1, 1, 3] à [1, 1, 1, 1, 1, 1, 1].

Giải thích test 2: Dãy số sau khi biến đổi là [1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1].


#include<bits/stdc++.h>
using namespace std;
long long N,L,R;
long long dodai(long long n){
	if(n==1 || n==0) return 1;
	long long x=dodai(n/2);
	return 2*x+1;
}
long long dembit(long long n,long long l,long long r){
	if(L<l && R>=r) return n;
	if(R<l || L>r) return 0;
	long long mid=(l+r)/2;
	if(mid>=L && mid<=R){
		return dembit(n/2,l,mid-1) + dembit(n/2,mid+1,r) + n%2;
	}
	else return dembit(n/2,l,mid-1) + dembit(n/2,mid+1,r);
}
int main(){
	int t; cin>>t;
	while(t--){
	    cin>>N>>L>>R;
		cout<<dembit(N,1,dodai(N))<<endl;
	}
}
