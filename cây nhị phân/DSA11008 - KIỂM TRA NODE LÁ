KIỂM TRA NODE LÁ

Bài làm tốt nhất
Cho cây nhị phân, nhiệm vụ của bạn là kiểm tra xem tất cả các node lá của cây có cùng một mức hay không? 
Ví dụ với cây dưới đây sẽ cho ta kết quả là Yes.



      Input:

Dòng đầu tiên đưa vào số lượng test T.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 2 dòng: dòng đầu tiên đưa vào số N là số lượng cạnh của cây; 
dòng tiếp theo đưa vào N bộ ba (u, v, x), trong đó u là node cha, v là node con, x= R nếu v là con phải, x=L nếu v là con trái; 
u, v, x được viết cách nhau một vài khoảng trống.
T, N, u, v, thỏa mãn ràng buộc: 1≤T≤100; 1≤N≤103; 1≤u, v≤104;
Output:

Đưa ra kết quả mỗi test theo từng dòng.
      Ví dụ:

Input

Output

2

2
1 2 R 1 3 L
4
10 20 L 10 30 R 20 40 L 20 60 R

1
0

#include<bits/stdc++.h>
using namespace std;
int level;
bool ok;
struct Node{
	int data;
	Node *l;
	Node *r;
	Node(int x){
		data=x;
		l=NULL;
		r=NULL;
	}
};
typedef Node* node;
void tao_node(node &x,int b,char c){
	if(c=='L') x->l=new Node(b);
	if(c=='R') x->r=new Node(b);
}
void tao_tree(node &x,int a,int b,char c){
	if(x==NULL) return;
	if(x->data==a) tao_node(x,b,c);
	tao_tree(x->l,a,b,c);
	tao_tree(x->r,a,b,c);
}
void ktra(node x, int cnt){
	if (x==NULL) return;
	if (x->l==NULL && x->r==NULL){
		if (level==-1)
			level=cnt;
		else if (cnt!=level){
			ok=false;
    	}
    	return;
	}
	ktra(x->l,cnt+1);
	ktra(x->r,cnt+1);
}
int main(){
	int t; cin>>t;
	while(t--){
		int n; cin>>n;
		node x=NULL;
		level=-1;
		ok=true;
		for(int i=0;i<n;i++){
			int a,b; char c;
			cin>>a>>b>>c;
			if(x==NULL){
				x=new Node(a);
				tao_node(x,b,c);
			}
			else{
				tao_tree(x,a,b,c);
			}
		}
		ktra(x,1);
		cout << ok << "\n";
	}
}
