BIẾN ĐỔI S – T

Bài làm tốt nhất
Cho hai số nguyên dương S và T (S, T<10000) và hai thao tác (a), (b) dưới đây:

Thao tác (a): Trừ S đi 1  (S = S-1) ;

Thao tác (b): Nhân S với 2 ( S = S*2);

Hãy dịch chuyển S thành T sao cho số lần thực hiện các thao tác (a), (b) là ít nhất. Ví dụ với  
S =2, T=5 thì số các bước ít nhất để dịch chuyển S thành T thông qua 4 thao tác sau:

Thao tác (a): 2*2 = 4;

Thao tác (b): 4-1 = 3;

Thao tác (a): 3*2 = 6;

Thao tác (b): 6-1 = 5;

Input:

Dòng đầu tiên ghi lại số tự nhiên T là số lượng Test;
T dòng kế tiếp mỗi dòng ghi lại một bộ Test. Mỗi test là một bộ đôi S và T.
          Output: Đưa ra kết quả mỗi test theo từng dòng.

         

          Ví dụ:

Input

Output

3

2 5

3 7

7 4

4

4

3

#include<bits/stdc++.h>
using namespace std;
int d[100001];
bool used[100001];
void hangdoi(int s,int k){
	memset(d,0,sizeof(d));
	memset(used,false,sizeof(used));
	queue<int> q;
	q.push(s);
	while(1){
		int x=q.front(); q.pop();
		int a=x*2,b=x-1;
		if(x<k && used[a]==false){
			used[a]=true;
			q.push(a); if(d[a]>d[x]+1 || d[a]==0) d[a]=d[x]+1;
		}
		if(a==k){
			cout<<d[a]<<endl;
			return;
		}
	    if(used[b]==false) {
		    q.push(b); 
		    used[b]=true;
		    if(d[b]>d[x]+1 || d[b]==0) d[b]=d[x]+1;
		}
		if(b==k){
			cout<<d[b]<<endl;
			return;
		}
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		int s,k; cin>>s>>k;
		hangdoi(s,k);
	}
}
 
