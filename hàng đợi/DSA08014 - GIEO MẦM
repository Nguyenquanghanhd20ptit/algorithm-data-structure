GIEO MẦM

Bài làm tốt nhất
Trên một giá có kích thước R x C (R hàng, C cột), một số hạt mầm đã được tra vào các ô. Một số hạt mầm được bón thêm chất dinh dưỡng, 
nên đã nảy mầm sớm thành cây non.

Mỗi ngày, các cây non sẽ lan truyền chất dinh dưỡng của nó cho các mầm ở ô xung quanh (trái, trên, phải, dưới),
làm cho các hạt mầm này phát triển thành cây non. Tuy nhiên, có thể có một số hạt mầm được gieo ở vị trí lẻ loi, do không nhận được chất dinh dưỡng
nên không thể nảy mầm.

Các bạn hãy xác định xem cần ít nhất bao nhiêu ngày để tất cả các hạt đều mầm?

Input:

Dòng đầu ghi số bộ test (không quá 10). Mỗi bộ test gồm:
Dòng đầu tiên gồm 2 số nguyên R và C (1 ≤ R, C ≤ 500).
R dòng tiếp theo, mỗi dòng gồm C số nguyên A[i][j].
A[i][j] = 0, ô (i, j) là ô trống.
A[i][j] = 1, ô (i, j) là hạt chưa nảy mầm.
A[i][j] = 2, ô (i, j) là cây non.
Output: 

Với mỗi test in ra thời gian ngắn nhất để tất cả các hạt đều nảy mầm. Nếu có hạt nào chưa nảy mầm, in ra -1.
Ví dụ:

 

Input

Output

2

3 5

2 1 0 2 1

1 0 1 2 1

1 0 0 2 1

3 5

2 1 0 2 1

0 0 1 2 1

1 0 0 2 1

2

-1

#include<bits/stdc++.h>
using namespace std;
int n,m,a[505][505];
int dx[4]={-1,0,0,1};
int dy[4]={0,-1,1,0};
bool used[505][505];
void inp(){
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>a[i][j];
		}
	}
}
bool check(){
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(a[i][j]==1) return true;
		}
	}
	return false;
}
void solve(){
	int cnt=0;
	while(1){
		bool ok=false;
		memset(used,false,sizeof(used));
		for(int i=1;i<=n;i++){
			for(int j=1;j<=m;j++){
				if(used[i][j]==false){
					if(a[i][j]==2){
						for(int k=0;k<4;k++){
							int i1=i+dx[k];
							int j1=j+dy[k];
							if(i1>=1 && i1<=n && j1>=1 && j1<=m && a[i1][j1]==1){
								a[i1][j1]=2;
								used[i1][j1]=true;
								ok=true;
							}
						}
					}
				}
			}
		}
		if(!ok) break;
		cnt++; 
	}
	if(check()) cout<<-1<<endl;
	else cout<<cnt<<endl;
}
int main(){
	int t; cin>>t; 
	while(t--){
		inp();
		solve();
	}
}

 
