QUÂN MÃ

Bài làm tốt nhất
Cho một quân mã trên bàn cờ vua tại vị trí ST. Nhiệm vụ của bạn là hãy tìm số bước di chuyển ít nhất để đưa quân mã tới vị trí EN.



Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test gồm 2 xâu dạng “xy” và “uv”, trong đó x, y là kí tự trong “abcdefgh” còn y, v là số thuộc 1, 2, 3, 4, 5, 6, 7, 8.

Output: 

Với mỗi test, in ra đáp án tìm được trên một dòng.

Ví dụ:

 

Input:

Output

8

e2 e4

a1 b2

b2 c3

a1 h8

a1 h7

h8 a1

b1 c3

f6 f6

2

4

2

6

5

6

1

0

 #include<bits/stdc++.h>
using namespace std;
int n,m,s1,s2,e1,e2;
string a,b;
int d[50][50]={0};
int dx[8]={-2,-2,-1,1,2,2,1,-1};
int dy[8]={-1,1,2,2,1,-1,-2,-2};
void inp(){
	cin>>a>>b;
	s1=a[0]-'a'+1; s2=a[1]-'0';
	e1=b[0]-'a'+1; e2=b[1]-'0';
	memset(d,0,sizeof(d));
}
void bfs(int i,int j){
	queue<pair<int,int>> q;
	q.push({i,j});
	while(!q.empty()){
		pair<int,int> x=q.front(); q.pop();
		int fi=x.first;
		int se=x.second;
		for(int k=0;k<8;k++){
			int i1=fi+dx[k];
			int j1=se+dy[k];
			if(i1>=1 && i1<=8 && j1>=1 && j1<=8){
				q.push({i1,j1});
				d[i1][j1]=d[fi][se]+1;
				if(i1==e1 && j1==e2){
					cout<<d[i1][j1]<<endl;
					return;
				}
			}
		}
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		if(a==b) cout<<0<<endl;
		else bfs(s1,s2);
	}
}
