#include<bits/stdc++.h>
using namespace std;
int n,m,s,e;
bool a[1001];
vector<int> v[1001];
int parent[1001];
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	memset(a,false, sizeof(a));
}
bool dfs(int u){
	a[u]=true;
	for(auto x:v[u]){
		if(a[x]==false){
			parent[x]=u;
			if(dfs(x)) return true;
		}
		else if(x!=parent[u]){
			s=x; e=u;
			return true;
		}
	}
	return false;
}
int main(){
	inp();
	for(int i=1;i<=n;i++){
		if(a[i]==false){
			if(dfs(i)){
				cout<<"YES"<<endl;
				vector<int> cycle; cycle.push_back(s);
				while(s!=e){
					cycle.push_back(e);
					e=parent[e];
				}
				cycle.push_back(s);
				reverse(cycle.begin(),cycle.end());
				for(auto x:cycle){
					cout<<x<<" ";
				}
				cout<<endl;
				return 0;
			}
		}
	}
	cout<<"NO"<<endl;
}
