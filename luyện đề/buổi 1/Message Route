https://cses.fi/problemset/task/1667

#include<bits/stdc++.h>
using namespace std;
int n,m,p[100001];
vector<int> v[100001];
bool used[100001];
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	memset(used,false,sizeof(used));
}
void bfs(int i){
	queue<int> q;
	q.push(i);
	used[i]=true;
	while(!q.empty()){
		int u=q.front(); q.pop();
		for(auto x:v[u]){
			if(used[x]==false){
				used[x]=true;
				p[x]=u;
				q.push(x);
			}
		}
	}
}
int main(){
	inp();
	bfs(1);
	if(used[n]==false){
		cout<<"IMPOSSIBLE"<<endl;
	}
	else{
		vector<int> path;
		int s=1,e=n;
		while(s!=e){
			path.push_back(e);
			e=p[e];
		}
		path.push_back(s);
		reverse(path.begin(),path.end());
		cout<<path.size()<<endl;
		for(auto x:path){
			cout<<x<<" ";
		}
	}
}
