ĐƯỜNG ĐI DÀI NHẤT

Bài làm tốt nhất
Cho đồ thị vô hướng có N đỉnh và M cạnh. Bạn hãy tìm đường đi dài nhất trên đồ thị, sao cho mỗi cạnh chỉ được đi qua nhiều nhất 1 lần.

Input: Dòng đầu tiên là số lượng bộ test T (T ≤ 10). Mỗi test bắt đầu bằng số nguyên N và M (1 ≤ N, M ≤ 20). Các đỉnh đánh dấu từ 0, 1, …, N-1. M dòng tiếp theo, mỗi dòng gồm 2 số u, v cho biết có cạnh nối giữa uàv.

Output: Với mỗi test, in ra đáp án tìm được, mỗi xâu in ra trên một dòng.

Ví dụ

Input

Output

2

3 2

0 1

1 2

15 16

0 2

1 2

2 3

3 4

3 5

4 6

5 7

6 8

7 8

7 9

8 10

9 11

10 12

11 12

10 13

12 14

 

2

12

#include<bits/stdc++.h>
using namespace std;
int n,m,res;
vector<int> v[1001];
bool used[505][505];
void inp(){
	cin>>n>>m; res=0;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	memset(used,false,sizeof(used));
}
void dfs(int u,int cnt){
	for(auto x:v[u]){
		if(used[x][u]==false && used[u][x]==false){
			used[x][u]=used[u][x]=true;
			dfs(x,cnt+1);
			used[x][u]=used[u][x]=false;
		}
	}
	res=max(cnt,res);
}
int main(){
	int t; cin>>t; 
	while(t--){
		inp();
		for(int i=0;i<n;i++){
			dfs(i,0);
		}
		cout<<res<<endl;
		for(int i=0;i<n;i++){
			v[i].clear();
		}
	}
}

 
