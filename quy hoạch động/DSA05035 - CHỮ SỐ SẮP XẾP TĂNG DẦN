CHỮ SỐ SẮP XẾP TĂNG DẦN

Bài làm tốt nhất
Xét các số X có các chữ số được sắp xếp tăng dần, tức a[1] ≤ a[2] ≤ … ≤ a[N] trong đó a[1], a[2], …, a[N] 
lần lượt là các chữ số của X. Chẳng hạn 223, 8999, …

Cho trước số chữ số N. Nhiệm vụ của bạn là đếm xem có bao nhiêu số như vậy.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 100).
Mỗi test gồm một số nguyên dương N (1 ≤ N ≤ 100).
Output: 

Với mỗi test, in ra đáp án tìm được trên một dòng theo modulo 109+7.
Ví dụ:

Input:

Output

3

1

2

3

10

55

220


#include<bits/stdc++.h>
using namespace std;
long long mod=1e9+7;
long long dp[1001][10];
void solve(){
	for(int i=0;i<=9;i++){
		dp[1][i]=1;
	}
	for(int i=2;i<=100;i++){
		for(int j=0;j<=9;j++){
			for(int k=0;k<=j;k++){
				dp[i][j]=(dp[i][j]+dp[i-1][k])%mod;
			}
		}
	}
}
int main(){
	int t; cin>>t;
	solve();
	while(t--){
		int n; cin>>n;
		long long res=0;
		for(int i=0;i<=9;i++){
			res=(res+dp[n][i])%mod;
		}
		cout<<res<<endl;
	}
}
