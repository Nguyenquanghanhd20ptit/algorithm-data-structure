DÃY NGOẶC ĐÚNG DÀI NHẤT

Bài làm tốt nhất
Cho một xâu chỉ gồm các kí tự ‘(‘ và ‘)’. Một dãy ngoặc đúng được định nghĩa như sau:

-     Xâu rỗng là 1 dãy ngoặc đúng.

-     Nếu A là 1 dãy ngoặc đúng thì (A) là 1 dãy ngoặc đúng.

-     Nếu A và B là 2 dãy ngoặc đúng thì AB là 1 dãy ngoặc đúng.

Cho một xâu S. Nhiệm vụ của bạn là hãy tìm dãy ngoặc đúng dài nhất xuất hiện trong xâu đã cho.

Input: Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test gồm một xâu S có độ dài không vượt quá 105 kí tự.

Output:  Với mỗi test in ra một số nguyên là độ dài dãy ngoặc đúng dài nhất tìm được.

Ví dụ:

Input:

Output

3

((()

)()())

()(()))))

 

2

4

6


cach 1
#include<bits/stdc++.h>
using namespace std;
int main(){
	int t; cin>>t;
	while(t--){
		string s; cin>>s;
		int n=s.length(),dem=0;
		int a[n+1]={0};
		s=" "+s;
		for(int i=1;i<=n;i++){
			if(s[i]=='('){
				dem++;
			}
			a[i]=dem;
		}
		stack<int> st;
    	st.push(0);
    	int res=0;
		for(int i=1;i<=n;i++){
			if(s[i]=='('){
				st.push(i);
			}
			else if(!st.empty()){
				if(s[st.top()]=='(' && s[i]==')'){
					st.pop();
			    	res=max(res,a[i]-a[st.top()]);
				}
				else st.push(i);
			}
			if(st.empty()) st.push(i);	
		}
		cout<<res*2<<endl;
	}
}


cach2
#include<bits/stdc++.h>
using namespace std;
void solve(string s){
	stack<int> st;
	st.push(-1);
	int res=0;
	for(int i=0;i<s.length();i++){
		if(s[i]=='('){
			st.push(i);
		}
		else{
			st.pop();
			if(!st.empty()){
				res=max(res,i-st.top());
			}
			else{
				st.push(i);
			}
		}
	}
	cout<<res<<endl;
}
int main(){
	int t; cin>>t;
	while(t--){
		string s; cin>>s;
		solve(s);
	}
}
