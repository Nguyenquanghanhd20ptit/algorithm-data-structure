PHẦN TỬ BÊN PHẢI ĐẦU TIÊN LỚN HƠN

Bài làm tốt nhất
Cho dãy số A[] gồm N phần tử. Với mỗi A[i], bạn cần tìm phần tử bên phải đầu tiên lớn hơn nó. Nếu không tồn tại, in ra -1.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test bắt đầu bởi số nguyên N (1 ≤ N ≤ 100000).

Dòng tiếp theo gồm N số nguyên A[i] (0 ≤ A[i] ≤ 109).

Output: 

Với mỗi test, in ra trên một dòng N số R[i], với R[i] là giá trị phần tử đầu tiên lớn hơn A[i].

Ví dụ

Input

Output

3

4

4 5 2 25

3

2 2 2

4

4 4 5 5

5 25 25 -1

-1 -1 -1

5 5 -1 -1

#include<bits/stdc++.h>
using namespace std;
int main(){
	int t; cin>>t;
	while(t--){
		int n; cin>>n;
		int a[n],b[n];
		for(int i=0;i<n;i++){
			cin>>a[i];
		}
		stack<int> st;
		st.push(a[n-1]);
		b[n-1]=-1;
	    for(int i=n-2;i>=0;i--){
	    	while(!st.empty() && a[i]>=st.top()){
	    		st.pop();
			}
			if(st.empty()) b[i]=-1;
			else{
				b[i]=st.top();
			}
			st.push(a[i]);
		}
		for(int i=0;i<n;i++){
			cout<<b[i]<<" ";
		}
		cout<<endl;
	}
}
