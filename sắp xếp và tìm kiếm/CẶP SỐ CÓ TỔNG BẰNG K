CẶP SỐ CÓ TỔNG BẰNG K

Bài làm tốt nhất
Cho dãy số A[] gồm có N phần tử.

Nhiệm vụ của bạn là đếm xem có bao nhiêu cặp (i, j) mà A[i] + A[j] = K cho trước.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 10).

Mỗi test gồm số nguyên N và K (1≤ N ≤ 100 000, 0 ≤ K ≤ 10^9).

Dòng tiếp theo gồm N số nguyên A[i] (-10^9 ≤ A[i] ≤ 10^9).

Output: 

Với mỗi test, in ra trên một dòng là đáp án thu được.

 

Ví dụ:

Input:

Output

4

4 6

1 5 7 -1

5 6

1 5 7 -1 5

4 2

1 1 1 1

13 11

10 12 10 15 -1 7 6 5 4 2 1 1 1

2

3

6

9


#include<bits/stdc++.h>
using namespace std;
int main(){
	int t; cin>>t;
	while(t--){
		int n,k; cin>>n>>k;
		int a[n+1];
		map<int,int> mp;
		for(int i=0;i<n;i++){
			cin>>a[i];
			mp[a[i]]++;
		}
		sort(a,a+n);
		long long dem=0;
		for(int i=0;i<n-1;i++){
			auto it=lower_bound(a+i+1,a+n,k-a[i]);
			if(*it==k-a[i] ){
				auto tmp=upper_bound(a+i+1,a+n,k-a[i]);
			    dem+=(tmp-a)-(it-a);
			}
		}
		cout<<dem<<endl;
	}
}
