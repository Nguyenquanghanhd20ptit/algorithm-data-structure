KIỂM TRA TÍNH LIÊN THÔNG MẠNH

Bài làm tốt nhất
Cho đồ thị có hướng G=<V, E> được biểu diễn dưới dạng danh sách cạnh. Hãy kiểm tra xem đồ thị có liên thông mạnh hay không?

Input:

Dòng đầu tiên đưa vào T là số lượng bộ test.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 2 dòng: dòng đầu tiên đưa vào hai số |V|, |E| tương ứng với số đỉnh và số cạnh;
Dòng tiếp theo đưa vào các bộ đôi u, v tương ứng với một cạnh của đồ thị.
T, |V|, |E| thỏa mãn ràng buộc: 1≤T≤100; 1≤|V|≤103; 1≤|E|≤|V|(|V|-1)/2;
Output:

Đưa ra “YES”, hoặc “NO” theo từng dòng tương ứng với test là liên thông mạnh hoặc không liên thông mạnh.
      Ví dụ:

Input:

Output:

1

6 9 

1 2 2 4 3 1 3 2 3 5 4 3 5 4 5 6 6  3

YES

#include<bits/stdc++.h>
using namespace std;
int n,m; 
bool used[1001];
vector<int> v[1001],r_v[1001];
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		r_v[y].push_back(x);
	}
}
stack<int> st;
void dfs1(int i){
	used[i]=true;
	for(auto x:v[i]){
		if(used[x]==false){
			dfs1(x);
		}
	}
	st.push(i);
}
void dfs2(int i){
	used[i]=true;
	for(auto x:r_v[i]){
		if(used[x]==false){
			dfs2(x);
		}
	}
}
void solve(){
	memset(used,false,sizeof(used));
	for(int i=1;i<=n;i++){
		if(used[i]==false){
			dfs1(i);
		}
	}
	memset(used,false,sizeof(used));
	int dem=0;
	while(!st.empty()){
		int u=st.top(); st.pop();
		if(used[u]==false){
			dfs2(u);
			dem++;
		}
	}
	if(dem==1) cout<<"YES"<<endl;
	else cout<<"NO"<<endl;
	for(int i=1;i<=n;i++){
		v[i].clear();
		r_v[i].clear();
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		solve();
	}
}
