KIỂM TRA ĐỒ THỊ CÓ PHẢI LÀ CÂY HAY KHÔNG

Bài làm tốt nhất
Một đồ thị N đỉnh là một cây, nếu như nó có đúng N-1 cạnh và giữa 2 đỉnh bất kì, chỉ tồn tại duy nhất 1 đường đi giữa chúng.

Cho một đồ thị N đỉnh và N-1 cạnh, hãy kiểm tra đồ thị đã cho có phải là một cây hay không?

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).
Mỗi test bắt đầu bởi số nguyên N (1 ≤ N ≤ 1000).
N-1 dòng tiếp theo, mỗi dòng gồm 2 số nguyên u, v cho biết có cạnh nối giữa đỉnh u và v.
Output: 

Với mỗi test, in ra “YES” nếu đồ thị đã cho là một cây, in ra “NO” trong trường hợp ngược lại.
Ví dụ:

 

 

 

Input

Output

2

4

1 2

1 3

2 4

4

1 2

1 3

2 3

 

YES

NO

 #include<bits/stdc++.h>
using namespace std;
int n,m;
vector<int> v[1001];
bool ok,used[1001];
void inp(){
	cin>>n; ok=true;
	for(int i=0;i<n-1;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
	}
	memset(used,false,sizeof(used));
}
void dfs(int i){
	used[i]=true;
	for(auto x:v[i]){
		if(used[x]==false){
			dfs(x);
		}
		else{
			ok=false;
		}
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		for(int i=1;i<=n;i++){
			if(!used[i]){
				dfs(i);
			}
		}
		if(ok) cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
		for(int i=1;i<=n;i++){
			v[i].clear();
		}
	}
}
