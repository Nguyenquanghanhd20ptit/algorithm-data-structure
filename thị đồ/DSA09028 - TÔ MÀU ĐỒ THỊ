TÔ MÀU ĐỒ THỊ

Bài làm tốt nhất
Một trong những bài toán kinh điển của lý thuyết đồ thị là bài toán Tô màu đồ thị. Bài toán được phát biểu như sau: 
Cho đồ thị vô hướng G =<V, E> được biểu diễn dưới dạng danh sách cạnh và số M. Nhiệm vụ của bạn là kiểm tra xem đồ thị có thể tô màu các
đỉnh bằng nhiều nhất M màu sao cho hai đỉnh kề nhau đều có màu khác nhau hay không?

https://media.geeksforgeeks.org/wp-content/uploads/mcolor.png

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test gồm hai phần: phần thứ nhất đưa vào ba số V, E, M tương ứng với số đỉnh, số cạnh và số màu; 
phần thứ hai đưa vào các cạnh của đồ thị.
T, V, E, M thỏa mãn ràng buộc: 1≤T ≤100; 1≤V≤10; 1≤ E ≤N(N-1), 1≤V≤N.
Output:

Đưa ra kết quả mỗi test theo từng dòng.
Ví dụ:

Input

Output

2
4  5  3
1 2

2 3

3 4

4 1

1 3
3 3 2
1 2

2 3

1 3

YES
NO

#include<bits/stdc++.h>
using namespace std;
int n,m,k,max_color,color[1001];
vector<int> v[1001];
bool used[1001];
void inp(){
	cin>>n>>m>>k; max_color=0;
	for(int i=0;i<m;i++){
		int x,y; cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	memset(used,false,sizeof(used));
	memset(color,0,sizeof(color));
}
bool bfs(int i){
	queue<int> q;
	q.push(i);
	used[i]=true;
	while(!q.empty()){
		int u=q.front(); q.pop();
		for(auto x:v[i]){
			if(color[x]==color[u]){
				color[x]++;
			}
			max_color=max(max_color,color[x]);
			if(max_color>=k) return false;
			if(used[x]==false){
				q.push(x);
				used[x]=true;
			}
		}
	}
	return true;
}
int main(){
	int t; cin>>t;
	while(t--){
		inp();
		bool ok=true;
		for(int i=1;i<=n;i++){
			if(used[i]==false){
				if(bfs(i)==false){
					ok=false;
					break;
				}
			}
		}
		if(ok) cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
		for(int i=1;i<=n;i++){
			v[i].clear();
		}
	}
}
