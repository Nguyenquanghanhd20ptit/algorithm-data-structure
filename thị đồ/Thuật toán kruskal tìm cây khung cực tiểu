Thuật toán kruskal tìm cây khung cực tiểu

#include<bits/stdc++.h>
using namespace std;
int n,m;
int parent[1001],sz[1001];
struct edge{
	int a,b,w;
};
vector<edge> canh;
void make_set(){
	for(int i=1;i<=n;i++){
		parent[i]=i;
		sz[i]=1;
	}
}
int find(int v){
	if(v==parent[v]){
		return v;
	}
	return parent[v]=find(parent[v]);
}
bool Union(int a,int b){
	a=find(a);  b=find(b);
	if(parent[a]==parent[b]) return false;
	if(sz[a] < sz[b]) swap(a,b);
	parent[b]=a;
	sz[a]+=sz[b];
	return true;
}
void inp(){
	cin>>n>>m;
	for(int i=0;i<m;i++){
		int x,y,w; cin>>x>>y>>w;
		edge e;
		e.a=x; e.b=y; e.w=w;
		canh.push_back(e);
	}
}
bool cmp(edge a,edge b){
	return a.w<b.w;
}
void kruskal(){
	int d=0;
	vector<edge> mst;
	sort(canh.begin(),canh.end(),cmp);
	for(int i=0;i<m;i++){
		if(mst.size()==n-1) break;
		edge e=canh[i];
		if(Union(e.a,e.b)){
			mst.push_back(e);
			d+=e.w;
		}
	}
	if(mst.size() != n-1){
		cout<<"khong co cay khung"<<endl;
	}
	else{
   		cout<<d<<endl;
		for(int i=0;i<mst.size();i++){
	    	cout<<mst[i].a<<" "<<mst[i].b<<" "<<mst[i].w<<endl;
    	}
    }
}
int main(){
	inp();
	make_set();
	kruskal();
}
