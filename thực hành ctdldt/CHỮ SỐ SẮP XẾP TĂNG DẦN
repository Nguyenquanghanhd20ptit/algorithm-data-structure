CHỮ SỐ SẮP XẾP TĂNG DẦN
Xét các số X có các chữ số được sắp xếp tăng dần, tức a[1] ≤ a[2] ≤ … ≤ a[N] trong đó a[1], a[2], …, a[N] lần lượt là các chữ số của X.
Chẳng hạn 223, 8999, …
Cho trước số chữ số N. Nhiệm vụ của bạn là đếm xem có bao nhiêu số như vậy.
Input:
Dòng đầu tiên là số lượng bộ test T (T ≤ 100).
Mỗi test gồm một số nguyên dương N (1 ≤ N ≤ 100).
Output: 
Với mỗi test, in ra đáp án tìm được trên một dòng theo modulo 109+7.
Ví dụ:
Input:
Output
3
1
2
3
10
55
220

#include<bits/stdc++.h>
using namespace std;
int mod = 1e9+7;
const int N=100;
int kq[N+1][10],xd[N+1];
void xuly(){
	for(int i=1 ;i <= 9;i++) kq[1][i]= 1;
	for(int i=2 ;i <= N ;i++){
		for(int j=1 ;j <= 9;j++){
			kq[i][j] = 0;
			for(int k = 1 ; k <= j;k++){
				kq[i][j] += kq[i-1][k];
				if(kq[i][j] >= mod) kq[i][j] -= mod;
			}
		}
	}
	xd[1] = 10;
	for(int i=2 ;i <= N;i++){
		xd[i] = xd[i-1];
		for(int j=1 ;j <= 9;j++){
			xd[i] += kq[i][j];
			if(xd[i] >= mod) xd[i] -= mod;
		}
	}
}
int main(){
	xuly();
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		cout << xd[n];
		cout << "\n";
	}
}
