#include<bits/stdc++.h>
using namespace std;
int m,n;
long long solve(long long a[]){
 	stack<long long> st;
	int i=0;
	long long res=0;
	while(i<n){
		if(st.empty() || a[i]>=a[st.top()]){
			st.push(i);
			i++;
		}
		else{
			int index=st.top(); st.pop();
			if(st.empty()){
				res=max(res,i*a[index]);
			}
			else{
				res=max(res,(i-st.top()-1)*a[index]);
			}
		}
	}
	while(!st.empty()){
		int index=st.top(); st.pop();
		if(st.empty()){
			res=max(res,i*a[index]);
		}
		else{
			res=max(res,(i-st.top()-1)*a[index]);
		}
	}
	return res;
}
int main(){
	cin>>m>>n;
	long long a[n],b[n];
	for(int i=0;i<n;i++){
		cin>>a[i];
		b[i]=m-a[i];
	}
	cout<<max(solve(a),solve(b));
}
