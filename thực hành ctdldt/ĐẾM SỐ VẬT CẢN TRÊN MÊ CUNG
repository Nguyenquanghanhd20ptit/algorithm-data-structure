ĐẾM SỐ VẬT CẢN TRÊN MÊ CUNG

Một mê cung được mô tả dưới dạng ma trận ký tự trong đó dấu ‘.’ là mô tả ô trống, không có vật cản, dấu ‘#’ mô tả một vật cản. Các vật cản sẽ ghép lại với nhau 
thành vật cản lớn hơn nếu nó liền kề theo hàng hoặc cột.

Hãy đếm xem trong mê cung có bao nhiêu vật cản.

Input

Dong đầu ghi số hai số N, M là số hàng và số cột của mê cung.

N dòng tiếp theo mô tả mê cung trong đó chỉ có các ký tự ‘.’ và ‘#’.

Output

Ghi ra số vật cản đếm được.

Ví dụ

Input

Output

5 6

.#....

..#...

..#..#

...##.

.#....

5

#include<bits/stdc++.h>
using namespace std;
int n,m;
char a[1001][1001];
int dx[4]={-1,0,0,1};
int dy[4]={0,-1,1,0};

void bfs(int i,int j){
	a[i][j]='.';
	queue<pair<int,int>> q;
	q.push({i,j});
	while(!q.empty()){
		pair<int,int> u=q.front(); q.pop();
		int fi=u.first;
		int se=u.second;
		for(int k=0;k<4;k++){
			int i1=fi+dx[k];
			int j1=se+dy[k];
			if(a[i1][j1]=='#' && i1>=1 && i1<=n && j1>=1 && j1<=m){
			    q.push({i1,j1});
			    a[i1][j1]='.';
			}
		}
	}
}
int main(){
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			cin>>a[i][j];
		}
	}
	int dem=0;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(a[i][j]=='#'){
				bfs(i,j);
				dem++;
			}
		}
	}
	cout<<dem<<endl;
}
