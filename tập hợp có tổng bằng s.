Bài 1. Tập hợp có tổng bằng S
Xét tất cả các tập hợp các số nguyên dương có các phần tử khác nhau và không lớn
hơn số n cho trước. Nhiệm vụ của bạn là hãy đếm xem có tất cả bao nhiêu tập hợp
có số lượng phần tử bằng k và tổng của tất cả các phần tử trong tập hợp bằng s?
Các tập hợp là hoán vị của nhau chỉ được tính là một.
Ví dụ với n = 9, k = 3, s = 23, {6, 8, 9} là tập hợp duy nhất thỏa mãn.
Input: Gồm nhiều bộ test (không quá 100 test).
Mỗi bộ test gồm 3 số nguyên n, k, s với 1 ≤ n ≤ 20, 1 ≤ k ≤ 10 và 1 ≤ s ≤ 155.
Input kết thúc bởi 3 số 0.
Output: Với mỗi test in ra số lượng các tập hợp thỏa mãn điều kiện đề bài.
Ví dụ:
Input Output
9 3 23
9 3 22
10 3 28
16 10 107
20 8 102
20 10 105
20 10 155
3 4 3
4 2 11
0 0 0

1
2
0
20
1542
5448
1
0
0
bài giải:
#include<bits/stdc++.h>
using namespace std;
int n,k,s,a[100];
int b[100];
void inp(){
	cin>>n>>k>>s;
	for(int i=1;i<=n;i++){
		a[i]=i;
	}
}
void inkq(){
	for(int i=0;i<k;i++){
		cout<<b[i]<<" ";
	}
	cout<<endl;

}
void Try(int x,int cnt,int sum){
	if(cnt==k && sum==s){
		 for(int i=0;i<cnt;i++){
		 	cout<<b[i]<<" ";
		 }
		 cout<<"\n";
	}
	for(int j=x;j<=n;j++){
		if(a[j]+sum<=s){
			b[cnt]=a[j];
			Try(j+1,cnt+1,sum+a[j]);
		}
	}
}

int main(){
	int t; cin>>t;
	while(t--){
		while(1){
			inp();
	    	if(n==0 && k==0 && s==0) break;
     	    Try(1,0,0);
		}
	}
}

cách 2: sinh xâu nhị phân để liệt kê các trường hợp
#include<bits/stdc++.h>
using namespace std;
int n,s,k,a[100];
void inkq(){
	int sum=0,res=0;
	for(int i=1;i<=n;i++){
		sum+=a[i];
		res=res+a[i]*i;
	}
	if(sum==k && res==s){
		for(int i=1;i<=n;i++){
			if(a[i]==1){
				cout<<i<<" ";
			}
		}
		cout<<endl;
	}
}
void ql(int i){
	for(int j=0;j<=1;j++){
		a[i]=j;
		if(i==n){
			inkq();
		}
		else ql(i+1);
	}
}
int main(){
	int t; cin>>t;
	while(t--){
		cin>>n>>k>>s;
		ql(1);
	}
}
