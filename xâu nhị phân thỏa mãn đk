sử dụng phương pháp sinh.
Bài 3.6. Liệt kê tất cả các xâu nhị phân độ dài n thỏa mãn điều kiện mỗi xâu có duy nhất 1 dãy m bít 1 liên tiếp và duy nhất 1 dãy k bít 0 liên tiếp.
Nhập k, m, n từ bàn phím.

Ví dụ với k=1, m=3, n=5 ta có output như sau:

1 0 1 1 1

1 1 1 0 1

Ví dụ với k=2, m=3, n=6 ta có output như sau:

0  0  1  1  1  0

0  1  1  1  0  0

1  0  0  1  1  1

1  1  1  0  0  1

cách làm
#include<bits/stdc++.h>
using namespace std;
int n,k,m,x,a[100];
void ktao(){
    for(int i=1;i<=n;i++){
        a[i]=0;
    }
}
void sinh(){
    int i=n;
    while(i>=1 && a[i]==1){
        a[i]=0;
        i--;
    }
    if(i==0) x=0;
    else{
        a[i]=1;
    }
}
int check(){
    int dem=0,dem1=0,dem2=1,u=0;
    for(int i=1;i<=n;i++){
        if(a[i]==1){
            dem++;
        }
        else dem=0;
        if(dem==m && a[i+1]==0){
        	int j=i+1;
        	while(a[j]==0 && j<=n){
        		j++;
        		dem1++;
			}
			if(dem1==k && (j==n+1 || a[j]==1)){
				u++;
			}
			 j=i-m-1;
			while(a[j]==0 && j>=1){
				j--;
        		dem2++;
        	}
    		if(dem2==k && (j==0 || a[j]==1)){
    			u++;
    		}
		}
    }
    if(u==1) return 1;
    return 0;
}
int main(){
    cin>>k>>m>>n;
    ktao();
    x=1;
    while(x==1){
        if(check()==1){
            for(int i=1;i<=n;i++){
                cout<<a[i]<<" ";
            }
            cout<<endl;
        }
        sinh();
    }
}
