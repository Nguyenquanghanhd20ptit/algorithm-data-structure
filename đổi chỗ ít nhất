ĐỔI CHỖ ÍT NHẤT

Cho mảng A[] gồm n phần tử. Hãy tìm số phép đổi chỗ ít nhất giữa các phần tử của mảng để mảng A[] được sắp xếp. Ví dụ với A[] = {4, 3, 2, 1} ta cần thực hiện ít nhất 
2 phép đổi chỗ: Swap(A[0], A[3]),  Swap(A[1], A[2]).
 Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào T bộ test. Mỗi bộ test gồm hai dòng: dòng đầu tiên là số phần tử của mảng n và X; dòng tiếp theo là n số A [i] của mảng A [];các số được 
viết cách nhau một vài khoảng trống.
T, n thỏa mãn ràng buộc: 1≤ T ≤100; 1≤ n ≤103.
   Output:

Đưa ra kết quả mỗi test theo từng dòng.
   Ví dụ:

Input:

Output:

2
4
4 3 2 1
5
1 5 4 3 2

2
2

cách giải: 
#include<bits/stdc++.h>
using namespace std;
int main(){
	int t; cin>>t;
	while(t--){
		int n;cin>>n;
		int a[n];
		vector<pair<int,int>> v;
		for(int i=0;i<n;i++){
			cin>>a[i];
			v.push_back(make_pair(a[i],i));
		}
		sort(v.begin(),v.end());
		int dem=0;
		for(int i=0;i<n;i++){
			if(v[i].second!=i){
				dem++;
				swap(v[v[i].second].first,v[i].first);
				swap(v[v[i].second].second,v[i].second);
				if(v[i].second != i) i--;
			}
		}
		cout<<dem<<endl;
	}
}
